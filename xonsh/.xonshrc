XDG_CONFIG_HOME = '{}/.config'.format($HOME)
XDG_RUNTIME_DIR = '/var/run'


import sys
sys.path.extend([
    p for p in eval($(python3 -c 'import sys; print(sys.path)'))
    if p not in sys.path
])

$PATH = [
    '$XDG_CONFIG_HOME/bin',
] + [p for p in $PATH]


# Xonsh prompt
def git_cwd():
    dot_git_dir = !(git rev-parse --is-inside-git-dir > /dev/null 2>&1)
    if dot_git_dir:
        from os import path

        if dot_git_dir.stdout == 'true\n':
            git_root = path.join($(git rev-parse --git-dir)[:-1], '..')
        else:
            git_root = path.join($(git rev-parse --show-toplevel)[:-1])
        git_root = path.realpath(git_root).replace('/Users/ojf', '~')

        repo_idx = git_root.rindex('/')
        repo_name = git_root[repo_idx:]

        if len(git_root) > 30:
            git_root = "{}...{}".format(
                git_root[:20],
                git_root[-10:] if len(repo_name) < 10 else git_root[repo_idx:]
            )

        cwd = $PROMPT_FIELDS['cwd']()
        return '{git_root}/({git_status}){git_relative_dir}'.format(
            git_root=git_root,
            git_status=$PROMPT_FIELDS['gitstatus'](),
            git_relative_dir=cwd[cwd.rfind(repo_name) + len(repo_name):]
        )
    else:
        return $PROMPT_FIELDS['cwd']()
$PROMPT_FIELDS['git_cwd'] = git_cwd
$PROMPT = '{env_name:[{}] }{git_cwd}{BOLD_WHITE}>{NO_COLOR}'


$CARGO_HOME = '{}/cargo'.format($XDG_CONFIG_HOME)
$PATH.append('{}/bin'.format($CARGO_HOME))

# Set SSH to use gpg-agent
$GNUPGHOME = '{}/gnupg'.format($XDG_CONFIG_HOME)
if 'SSH_AGENT_PID' in ${...}:
    del $SSH_AGENT_PID
if not !(gpg-agent > /dev/null 2>&1) or 'SSH_AUTH_SOCK' not in ${...}:
    killall gpg-agent scdaemon > /dev/null 2>&1
    bash_eval_str = $(gpg-agent --enable-ssh-support --daemon)
    $SSH_AUTH_SOCK = bash_eval_str[
        len('SSH_AUTH_SOCK='):bash_eval_str.rfind('; export')
    ]
    $GPG_TTY = $(tty)

$VIMDIR = '{}/vim'.format($XDG_CONFIG_HOME)
$VIMRC = '{}/.vimrc'.format($VIMDIR)

$XONSH_CONFIG_DIR = '{}/xonsh'.format($XDG_CONFIG_HOME)
$XONSHRC = '{}/.xonshrc'.format($XONSH_CONFIG_DIR)
$VI_MODE = True

vim_with_rc = 'vim -u {}'.format($VIMRC)
$EDITOR = vim_with_rc
$VISUAL = vim_with_rc

aliases.update({
    'dc': 'docker-compose',
    'fk': lambda args, stdin=None: execx(
        $(thefuck @(__xonsh_history__.inps[-1]))
    ),
    'gitl': 'git lol',
    'gits': 'git status',
    'gpg': 'gpg2',
    'gz': 'tar -zcvf',
    'ls': 'ls --color=auto',
    'll': 'ls -l',
    'lla': 'll -A',
    'pacaur': 'pacaur --color=auto',
    'ping': 'prettyping',
    'pip': 'pip3',
    'python': 'python3',
    'vim': vim_with_rc,
})

$LANG = 'en_GB.UTF-8'
$LC_CTYPE = 'en_GB.UTF-8'
