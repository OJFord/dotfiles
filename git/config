[advice]
    statusHints = false

[alias]
    amend = commit --amend
    changes = log HEAD...@{upstream} --left-right --graph
    conflicts = "!f(){ git diff --check | cut --delimiter=':' --field=1 | uniq; }; f"
    files = diff-tree --no-commit-id --name-only -r
    fixup = "!f(){ target=\"$(test -n \"$1\" && git rev-parse \"$1\" || git fzsha rev-parse)\"; git commit --fixup=\"$target\" ${@:2} && EDITOR=true git rebase -i --autostash --autosquash \"$target^\"; }; f"
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    push-new = "!f(){ remote="$1"; branch="$(git rev-parse --abbrev-ref HEAD)"; git push --set-upstream "$remote" "$branch"; }; f"
    released = tag --contains
    recap = log --decorate --oneline --pretty=format:'%C(green)%cr: %C(white italic)%s %C(auto)%d' -n10 --author=@ojford.com
    rp = fzsha rev-parse
    staged = diff --cached
    uncommit = reset HEAD~1

[color]
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    pager = true
    showBranch = auto
    status = auto
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    commit = green bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = 238 bold green

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[commit]
    cleanup = strip
    gpgsign = true

[core]
    editor = vim
    pager = delta

[delta]
    features = full
    navigate = true

[delta "full"]

[delta "interactive"]
    keep-plus-minus-markers = false

[diff]
    algorithm = histogram
    colorMoved = default
    compactionHeuristic = true
    context = 3
    indentHeuristic = true
    interHunkContext = 1
    noprefix = false
    wordRegex = [^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+

[filter "hawser"]
    required = true
    clean = git hawser clean %f
    smudge = git hawser smudge %f

[filter "lfs"]
    required = true
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f

[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f

[gpg]
    program = gpg

[help]
    autocorrect = 1

[interactive]
    singleKey = true
    diffFilter = delta --color-only --features=interactive

[merge]
    conflictStyle = diff3

[protocol "keybase"]
    allow = always

[pull]
    rebase = true

[rebase]
    stat = false
    autoSquash = true
    autoStash = true
    missingCommitsCheck = "error"

[remote "origin"]
    fetch = +refs/pull/*/head:refs/remotes/origin/pr/*

[sendemail]
    annotate = true
    confirm = always

[status]
    short = true
    branch = true

[tag]
    forceSignAnnotated = true

[url "git@github.com:"]
        insteadOf = gh:

[url "git@gitlab.com:"]
        insteadOf = gl:

[url "aur@aur.archlinux.org:"]
        insteadOf = aur:

[user]
    name = Oliver Ford
    email = dev@ojford.com
    # signingKey set by active-gpg-key.config inclusion

[include]
    path = active-gpg-key.config

[init]
    defaultBranch = master
